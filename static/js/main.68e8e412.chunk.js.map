{"version":3,"sources":["serviceWorker.js","components/AboutMe.jsx","components/Phrase.jsx","components/Projects.jsx","components/Contact.jsx","components/Footer.jsx","components/Main.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Background","styled","Particles","attrs","params","concat","props","_templateObject","ContainerVW","div","_templateObject2","TextContainer","_templateObject3","SubTitle","p","_templateObject4","Title","h2","_templateObject5","Paragraph","_templateObject6","LogoContainer","_templateObject7","img","src","_templateObject8","cliph","_templateObject9","Logo","_templateObject10","AboutMe","react_default","a","createElement","href","target","par","Phrase_templateObject","PhraseContainer","Phrase_templateObject2","PhraseTextContainer","Phrase_templateObject3","PhraseText","Phrase_templateObject4","PhraseAuthor","Phrase_templateObject5","Phrase","_ref","text","author","Phrase_Background","Project","Projects_templateObject","ProjectsMain","Projects_templateObject2","ProjectName","animated","Projects_templateObject3","url","calc","x","y","innerHeight","innerWidth","trans","s","Card","link","_useSpring","useSpring","xys","initial","from","mass","tension","friction","_useSpring2","Object","slicedToArray","set","className","onMouseMove","_ref2","clientX","clientY","onMouseLeave","style","transform","interpolate","n","Projects","FormContainer","form","method","action","Contact_templateObject","InputContainer","Contact_templateObject2","TextAreaContainer","Contact_templateObject3","InputContainerItem","Contact_templateObject4","InputName","input","type","id","placeholder","name","pattern","required","Contact_templateObject5","TextArea","textarea","Contact_templateObject6","Input","Contact","htmlFor","Contact_Input","Footer_templateObject","FooterContainer","Footer_templateObject2","Footer","Footer_Background","Main","Fragment","components_AboutMe","components_Phrase","components_Projects","components_Contact","components_Footer","ReactDOM","render","components_Main","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.68e8e412.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Particles from 'react-particles-js'\r\nimport par from '../particles.json'\r\n\r\nconst Background = styled(Particles).attrs({\r\n  params: `${props => props.params}`\r\n})`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n`\r\n\r\nexport const ContainerVW = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  @media screen and (max-width: 760px) {\r\n    height: auto;\r\n    width: 100%;\r\n  } \r\n`\r\n\r\nexport const TextContainer = styled.div`\r\n  padding: 62px;\r\n  max-width: 450px;\r\n  z-index: 2000; \r\n`\r\n\r\nexport const SubTitle = styled.p`\r\n  color: #b0b0b0;\r\n  font-size: 25px;\r\n  text-align: center;\r\n`\r\n\r\nexport const Title = styled.h2`\r\n  color: #636363;\r\n  font-size: 48px;\r\n  font-weight: 700;\r\n  text-align: center;\r\n`\r\n\r\nexport const Paragraph = styled.p`\r\n  margin-top: 16px;\r\n  color: #636363;\r\n  font-size: 16px;\r\n  text-align: center;\r\n` \r\n\r\nconst CliphPathContainer = styled.div`\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: -1000;\r\n`\r\n\r\nconst Cliph = styled.img.attrs(props => ({\r\n  src: props.src\r\n}))`\r\n  background-color: red;\r\n  height: 100%;\r\n  width: 100%;\r\nclip-path: ${props => props.cliph};\r\nobject-fit: cover;\r\nposition: absolute;\r\n`\r\nconst LogoContainer = styled.div`\r\n  height: 40px;\r\n  width: 100%;\r\n  margin-top: 24px;\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\n\r\nconst Logo = styled.div`\r\n  border: 3px solid #a55eea;\r\n  border-radius: 20px;\r\n  font-size: 20px;\r\n  display: inline-flex;\r\n  margin-right: 16px;\r\n  & > a {\r\n    text-decoration: none;\r\n    color: #a55eea;\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 0px 20px;\r\n    transition: all .3s ease-in-out;\r\n  }\r\n\r\n  & > a:hover {\r\n    color: #FFF;\r\n  }\r\n\r\n  &:hover {\r\n    background: #a55eea;\r\n    color: #FFF;\r\n  }\r\n`\r\n\r\n\r\nconst AboutMe = () => (\r\n  <ContainerVW>\r\n    <TextContainer>\r\n      <SubTitle>\r\n        Santiago Guerra\r\n      </SubTitle>\r\n      <Title>\r\n        ABOUT ME\r\n      </Title>\r\n      <Paragraph>\r\n    My name is Santiago, most of the\r\ntime I like to code, listen to\r\ninteresting talks about the latest\r\ntechnology and read. I am a citizen\r\nof a beautiful country called\r\nColombia, I love everything related\r\nto technology, mathematics and\r\nprogramming.\r\n<br />\r\n<br/>\r\nSince I was little I have been a very\r\ncurious person who likes to learn\r\nand is always willing to help. I met\r\nthe frontend development a year\r\nago and fell in love immediately. I\r\nwant to grow and contribute in this\r\ncountry.\r\n    </Paragraph>\r\n    <LogoContainer>\r\n      <Logo>\r\n      <a href=\"https://github.com/santiagoguerra\" target='_blank'>Github</a>        \r\n      </Logo>\r\n      <Logo>\r\n      <a href=\"https://linkedin.com/in/santiago--guerra\" target='_blank'>Linkedin</a>        \r\n      </Logo>\r\n    </LogoContainer>\r\n    </TextContainer>\r\n\r\n\r\n    {/* <CliphPathContainer>\r\n    <Cliph cliph='polygon(0% 100%, 40% 100%, 80% 40%, 75% 40%, 0% 90%)' src='https://images.pexels.com/photos/1455993/pexels-photo-1455993.jpeg?auto=compress&cs=tinysrgb&h=4000&w=2000'/>\r\n      <Cliph cliph='polygon(100% 100%, 100% 90%, 36% 30%, 30% 30%, 65% 100%)' src='https://images.pexels.com/photos/1309766/pexels-photo-1309766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=4000&w=2000' />\r\n    </CliphPathContainer>   */}\r\n    <Background params={par}/> \r\n  </ContainerVW>\r\n)\r\n\r\nexport default AboutMe","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Particles from 'react-particles-js'\r\nimport par from '../particles.json'\r\n// const particlesParams = {\r\n//   polygon: {\r\n//   enable: true,\r\n//   type: '',\r\n//   move: {\r\n//       radius: 10\r\n//   },\r\n//   url: '../Logo.svg'\r\n//   }\r\n// } \r\n\r\n\r\nconst Background = styled(Particles).attrs({\r\n  params: `${props => props.params}`\r\n})`\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n`\r\n\r\nconst PhraseContainer = styled.div`\r\n  margin-top: 62px;\r\n  background: #a55eea;\r\n  height: 200px;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n`\r\n\r\nconst PhraseTextContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  padding: 30px;\r\n`\r\n\r\nconst PhraseText = styled.p`\r\n font-size: 32px;\r\n  color: #FFF; \r\n`\r\n\r\nconst PhraseAuthor = styled.h2`\r\nfont-size: 32px;\r\n  color: #FFF;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`\r\n\r\nconst Phrase = ({text, author}) => (\r\n  <PhraseContainer>\r\n    <Background params={par}/>\r\n    <PhraseTextContainer>\r\n      <PhraseText>\r\n        {text}\r\n      </PhraseText>\r\n      <PhraseAuthor>\r\n        {author}\r\n      </PhraseAuthor>\r\n    </PhraseTextContainer>\r\n  </PhraseContainer>\r\n)\r\n\r\nexport default Phrase","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useSpring, animated } from 'react-spring'  \r\nimport {Title, Paragraph, AboutMeName, ContainerVW, TextContainer, SubTitle} from './AboutMe'\r\n\r\n\r\nconst Project = styled.div`\r\n  width: 100%;\r\n  height: 50%;\r\n  padding: 32px;\r\n  display:flex;\r\n  justify-content: center;\r\n`\r\n\r\nconst ProjectsMain = styled.div`\r\n  width: 80%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n\r\n  @media screen and (max-width: 760px) {\r\n    width: 100%;\r\n  }\r\n`\r\nconst ProjectName = styled(animated.div)`\r\n \r\n  width: 250px;\r\n  height: 250px;\r\n  background: grey;\r\n  border-radius: 5px;\r\n  background-image: url(${props => props.url});\r\n  background-size: cover;\r\n  background-position: center center;\r\n  box-shadow: 0px 10px 30px -5px rgba(0, 0, 0, 0.3);\r\n  transition: box-shadow 0.5s;\r\n  will-change: transform;\r\n  border: 15px solid white;\r\n  position: relative;\r\n\r\n\r\n  &:hover {\r\n    box-shadow: 0px 30px 100px -10px rgba(0, 0, 0, 0.4);\r\n  }\r\n\r\n\r\n  & > a {\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n    color: #a55eea;\r\n    border: 1px solid #a55eea;\r\n    background-color: #FFF;\r\n    padding: 4px 8px;\r\n    border-radius: 4px;\r\n    text-decoration: none;\r\n    transition: all 300ms ease-in-out;\r\n\r\n    &:hover {\r\n      background: #a55eea;\r\n      color: #FFF;\r\n    }\r\n  }\r\n`\r\n\r\nconst calc = (x, y) => [-(y - window.innerHeight / 2) / 20, (x - window.innerWidth / 2) / 20, 1.1]\r\nconst trans = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\r\n\r\nfunction Card({url, link}) {\r\n  const [props, set] = useSpring(() => ({ xys: [0, 0, 1], initial: 100, from: {initial: 0}, config: { mass: 5, tension: 350, friction: 40 } }))\r\n  return (\r\n    <ProjectName\r\n      className='mar'\r\n      onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\r\n      onMouseLeave={() => set({ xys: [0, 0, 1] })}\r\n      style={{ transform: props.xys.interpolate(trans)}}\r\n      url={url}\r\n      initial={props.initial.interpolate( n => n)}\r\n    > <a href={link} target='_blank'>View it</a></ProjectName>\r\n  )\r\n}\r\n\r\nconst Projects = () => (\r\n  <ContainerVW>\r\n    <TextContainer>\r\n      <Title>\r\n          PROJECTS\r\n      </Title>\r\n      <SubTitle>\r\nHere are my most recent projects.      </SubTitle>\r\n    </TextContainer>\r\n\r\n    <Project>\r\n      <ProjectsMain>\r\n        <Card \r\n          url='https://www.imagensn.com/images/2019/02/03/localhost_3000_.png'\r\n          link='https://github.com/SantiagoGuerra/Notika'\r\n        />\r\n        <Card \r\n          url='https://camo.githubusercontent.com/d8132481a5f93d819a25ebae19262c9d4a3fa932/68747470733a2f2f7777772e696d6167656e736e2e636f6d2f696d616765732f323031392f30322f31302f436170747572612e706e67'\r\n          link='https://github.com/SantiagoGuerra/pi'\r\n        />\r\n      </ProjectsMain>\r\n    </Project>\r\n\r\n  </ContainerVW>\r\n)\r\n\r\nexport default Projects","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {Title, Paragraph, AboutMeName, ContainerVW, TextContainer, SubTitle} from './AboutMe'\r\n\r\nconst FormContainer = styled.form.attrs({\r\n  method: 'POST',\r\n  action: \"https://formspree.io/guerrasantiago19@gmail.com\"\r\n})`\r\n  height: 100%;\r\n  width: 70%;\r\n  margin-bottom: 62px;\r\n  border-radius: 8px;\r\n  box-shadow: 0px 8px 16px rgba(0,0,0,.3);\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n\r\n  @media screen and (max-width: 760px){\r\n    width: 90%; \r\n    flex-direction: row;\r\n  }\r\n`\r\nconst InputContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 50%;\r\n  align-items: center;\r\n  padding: 32px 0px;\r\n  height: 300px;\r\n\r\n  @media screen and (max-width: 760px) {\r\n    padding: 0;\r\n  width: 100%;\r\n    height: auto;\r\n  }\r\n`\r\n\r\nconst TextAreaContainer = styled(InputContainer)`\r\n\r\n`\r\n\r\nconst InputContainerItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 80%;\r\n`\r\n\r\nconst InputName = styled.input.attrs(({type, id, placeholder, pattern, required}) => ({\r\n  type,\r\n  id,\r\n  placeholder,\r\n  name : id,\r\n  pattern,\r\n  required\r\n}))`\r\n  height: 40px;\r\n  margin-bottom: 16px;\r\n  border: 1px solid #a55eea;\r\n  border-radius: 8px;\r\n  padding-left: 24px;\r\n  color: #636363;\r\n  font-size: 16px;\r\n\r\n  ::placeholder {\r\n    color: #d0d0d0;\r\n  }\r\n`\r\nconst TextArea = styled.textarea.attrs({\r\n  name:'comments',\r\n  placeholder: 'Write me Something :)'\r\n})`\r\n  height: 200px;\r\n  width: 100%;\r\n  margin-bottom: 16px;\r\n  border: 1px solid #a55eea;\r\n  border-radius: 8px;\r\n  padding:24px;\r\n  color: #636363;\r\n  font-size: 16px;\r\n  margin-right: 32px;\r\n\r\n  ::placeholder {\r\n    color: #d0d0d0;\r\n  }\r\n\r\n  @media screen and (max-width:760px){\r\n    margin-right: 0;\r\n  }\r\n`\r\nconst Input = ({type, id, placeholder, pattern, required}) => (\r\n  <InputName type={type} id={id} placeholder={placeholder} pattern={pattern} required={required}/>\r\n)\r\n\r\n\r\n\r\nconst Contact = () => (\r\n  <ContainerVW>\r\n    <TextContainer>\r\n      <Title>\r\n        CONTACT\r\n      </Title>\r\n      <SubTitle>\r\n        Send me a message!\r\n      </SubTitle>\r\n    </TextContainer>\r\n    <FormContainer>\r\n      <div className='full'>\r\n      <InputContainer>\r\n        <InputContainerItem>\r\n          <label htmlFor='name'>\r\n            Name\r\n          </label>\r\n          <Input type='name' id='name' placeholder='Write Your Name' required pattern='^[A-Za-zÑñÁáÉéÍíÓóÚúÜü\\s]+$'/>\r\n        </InputContainerItem>\r\n        <InputContainerItem>\r\n        <label htmlFor='email'>\r\n            Email\r\n          </label>\r\n          <Input type='email' id='email' placeholder='Write Your Email' required pattern='^[A-Za-zÑñÁáÉéÍíÓóÚ^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,3})$úÜü\\s]+$'/>\r\n        </InputContainerItem>\r\n        <InputContainerItem>\r\n        <label htmlFor='email'>\r\n            Subject\r\n          </label>\r\n          <Input type='name' id='subject' placeholder='Your Title'/>\r\n        </InputContainerItem>\r\n      </InputContainer>\r\n        \r\n      <TextAreaContainer name='message'>\r\n        <InputContainerItem>\r\n          <label htmlFor=\"\">Message</label>\r\n          <TextArea />\r\n        </InputContainerItem>\r\n      </TextAreaContainer>\r\n      </div>\r\n      <input type='submit' name='submit' />\r\n    </FormContainer>\r\n  </ContainerVW>\r\n)\r\n\r\nexport default Contact","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Particles from 'react-particles-js'\r\nimport par from '../particles.json'\r\n\r\nconst Background = styled(Particles).attrs({\r\n  params: `${props => props.params}`\r\n})`\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n`\r\n\r\nconst FooterContainer = styled.div`\r\n  background: #636363;\r\n  height: 200px;\r\n  font-size: 25px;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  margin-top: 62px;\r\n`\r\n\r\nconst Footer = () => (\r\n  <FooterContainer>\r\n    Made By \t&nbsp; <span className='purple'>  Santiago</span>\r\n    <Background params={par}/>\r\n  </FooterContainer>\r\n)\r\n\r\nexport default Footer","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport AboutMe from './AboutMe'\r\nimport Phrase from './Phrase';\r\nimport Projects from './Projects';\r\nimport Contact from './Contact';\r\nimport Footer from './Footer'\r\n\r\nconst Main = () => (\r\n  <React.Fragment>\r\n    <AboutMe/>\r\n    <Phrase\r\n      text='\"The noblest pleasure is the joy of understanding.\"'\r\n      author='Leonardo Da Vinci'\r\n    />\r\n    <Projects/>\r\n    <Phrase\r\n      text='\"I think it is possible for ordinary people to choose to be extraordinary.\"'\r\n      author='Elon Musk'\r\n    />\r\n    <Contact />\r\n    <Footer/>\r\n  </React.Fragment>\r\n)\r\n\r\nexport default Main","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Main from './components/Main';\n\nReactDOM.render(<Main/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}